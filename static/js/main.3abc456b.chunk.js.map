{"version":3,"sources":["image/germany_640.png","image/india_640.png","image/united_kingdom_640.png","image/united_states_of_america_640.png","image/logo-transparent.png","component/ChannelTuner.js","component/CountryTuner.js","component/DateTuner.js","component/LanguageTuner.js","component/VideoCountTuner.js","component/Control.js","component/HowToHug.js","component/Playlist.js","component/Screen.js","component/NewsMarquee.js","App.js","Hugs.js","Hospital.js","About.js","serviceWorker.js","index.js","image/bolivia_640.png"],"names":["module","exports","ChannelTuner","props","handleToggle","selectedToggleIndex","evt","category","currentTarget","value","setState","onSelectedChannelChange","state","Accordion","bsPrefix","defaultActiveKey","Card","className","this","Header","Toggle","as","Button","onClick","variant","eventKey","Collapse","Body","Text","React","Component","CountryTuner","onSelectedCountryChange","item","countryName","i","countries","code","name","selectedCountryCode","selectedCountryName","Dropdown","onSelect","Menu","Item","Image","src","boFlag","height","deFlag","inFlag","gbFlag","usFlag","DateTuner","onSelectedDateChange","selectedDate","today","Date","lastWeek","setDate","getDate","minDate","maxDate","onChange","LanguageTuner","onSelectedLanguageChange","languageName","languages","selectedLanguageCode","selectedLanguageName","VideoCountTuner","onSelectedVideoCountChange","selectedVideoCount","for","type","min","max","step","id","changeEvent","target","Control","selectedChannel","getPlaylist","selectedCountry","getStatistics","selectedLanguage","onPlaylistChange","onStatisticsChange","component","axios","method","url","responseType","params","countryCode","languageCode","publishedDate","maxResults","then","response","console","log","data","items","catch","error","stat","Countries","CountryCode","TotalRecovered","Row","Col","xs","HowToHug","setShow","show","sm","Modal","onHide","closeButton","Title","href","Playlist","scrollLeft","start","scrollRight","videos","length","size","window","innerWidth","small","vids","push","playlist","vid","alt","snippet","title","thumbnails","default","width","onVideoChange","Container","icon","faArrowCircleLeft","fixedWidth","faArrowCircleRight","Screen","embedUrl","frameBorder","allow","allowFullScreen","NewsMarquee","newsText","totalRecovered","App","results","selectedVideo","md","resourceId","videoId","Hugs","faPray","faWhatsapp","faPeopleCarry","Hospital","Subtitle","About","faSmile","class","faCross","faUsers","faGithub","faTrello","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","Navbar","bg","expand","Brand","ImgLogo","aria-controls","Nav","Link","faUser","basename","exact","path","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3abc456b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/germany_640.ecd018e0.png\";","module.exports = __webpack_public_path__ + \"static/media/india_640.15d41000.png\";","module.exports = __webpack_public_path__ + \"static/media/united_kingdom_640.9abf6d4b.png\";","module.exports = __webpack_public_path__ + \"static/media/united_states_of_america_640.5d049922.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-transparent.c62c8499.png\";","import React from 'react';\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './ChannelTuner.scss'\n\nclass ChannelTuner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedToggleIndex: 0\n    };\n  }\n\n  handleToggle = (selectedToggleIndex) => (evt) => {\n    const category = evt.currentTarget.value;\n    this.setState({\n      selectedToggleIndex\n    }, () => {\n      this.props.onSelectedChannelChange(category)\n    });\n  }\n\n  render(){\n    return (\n      <Accordion bsPrefix=\"channel-tuner-accordion\" defaultActiveKey=\"0\">\n        <Card className={this.state.selectedToggleIndex === 0 ? 'active' : ''}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} value=\"gratitude\" onClick={this.handleToggle(0)} variant=\"link\" eventKey=\"0\">\n              GRATITUDE\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Card.Text>\n                <p>A channel with the latest news about acts of gratitude towards doctors all over the world. From concerts to hand clapping, praying and sending meals or food. Lighting buildings or monuments in your honor.</p>\n                <p>Doctors/Nurses: This is the place that gathers citizen’s appreciation. We cannot be with you physically but we send you hugs from the soul. Remember someone is thinking about you and cheering you on every minute.</p>\n                <p>Do not be anxious about anything, but in every situation, by prayer and petition, with thanksgiving, present your requests to God. And the peace of God, which transcends all understanding, will guard your hearts and your minds in Christ Jesus. - Philippians 4:6-7</p>\n              </Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card className={this.state.selectedToggleIndex === 1 ? 'active' : ''}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} value=\"kindness\" onClick={this.handleToggle(1)} variant=\"link\" eventKey=\"1\">\n              KINDNESS\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n              <Card.Text>\n                  <p>Normal news focuses in the worst side of people during crisis. We focus on heart warming acts of kindness, helping strangers, helping each other.</p>\n                  <p>Using creativity, talent, skills and good will to find solutions to problems. Seeing opportunities in the crisis instead of despair. From helping elders and ill people with their errands, helping the poor with food, making medical supply with local resources and so much more. Get inspired, then help others.</p>\n                  <p>It is more blessed to give than to receive. - Acts 20:35</p>\n              </Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card className={this.state.selectedToggleIndex === 2 ? 'active' : ''}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} value=\"miracle\" onClick={this.handleToggle(2)} variant=\"link\" eventKey=\"2\">\n              MIRACLES\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"2\">\n            <Card.Body>\n            <Card.Text>Miracles happen every day, every moment, only that people are too busy to notice. Let us share just a little sample of the wonders happening all over the world. People recovering against all odds, prayers answered, supplies provided super naturally, people transformed, people resilience, people changing for good.\n                  <p>Doctors/Nurses: rest in the fact that you did all within your strength, let God to give you peace in the storm.</p>\n                  <p>For nothing will be impossible with God. - Luke 1:37</p>\n            </Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card className={this.state.selectedToggleIndex === 3 ? 'active' : ''}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} value=\"doctors\" onClick={this.handleToggle(3)} variant=\"link\" eventKey=\"3\">\n              UNITY\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"3\">\n            <Card.Body>\n             <Card.Text>\n              <p>You are not alone. We fight together against COVID-19. Be encouraged and inspired by what other medical care providers are doing around the world.</p>\n              <p>The Lord himself goes before you and will be with you; he will never leave you nor forsake you. Do not be afraid; do not be discouraged.” - Deuteronomy 31:8</p>\n             </Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n}\n\nexport default ChannelTuner;\n","import React from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Image from 'react-bootstrap/Image';\n\nimport boFlag from '../image/bolivia_640.png';\nimport deFlag from '../image/germany_640.png';\nimport inFlag from '../image/india_640.png';\nimport gbFlag from '../image/united_kingdom_640.png';\nimport usFlag from '../image/united_states_of_america_640.png';\n\nimport './DropdownToggle.scss';\n\nimport countries from '../data/countries.json';\n\nclass CountryTuner extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selectedCountryCode: \"us\",\n      selectedCountryName: \"United States\"\n    };\n  }\n\n  onSelectedCountryChange = (item) => {\n    var countryName = \"\";\n    for (var i in countries){\n      if (countries[i].code === item){\n        countryName = countries[i].name;\n      }\n    }\n\n    this.setState({ selectedCountryCode: item, selectedCountryName: countryName },\n                  () => this.props.onSelectedCountryChange(item));\n  }\n\n  render(){\n    return (\n      <div className=\"hug-dropdown-toggle\">\n        <Dropdown onSelect={this.onSelectedCountryChange}>\n          <Dropdown.Toggle variant=\"default\">\n            {this.state.selectedCountryName}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item eventKey=\"bo\"><Image src={boFlag} height=\"20\" /> Bolivia</Dropdown.Item>\n            <Dropdown.Item eventKey=\"de\"><Image src={deFlag} height=\"20\" /> Germany</Dropdown.Item>\n            <Dropdown.Item eventKey=\"in\"><Image src={inFlag} height=\"20\" /> India</Dropdown.Item>\n            <Dropdown.Item eventKey=\"gb\"><Image src={gbFlag} height=\"20\" /> United Kingdom</Dropdown.Item>\n            <Dropdown.Item eventKey=\"us\"><Image src={usFlag} height=\"20\" /> United States</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport default CountryTuner;\n","import React from 'react';\n\nimport DatePicker from 'react-date-picker';\n\nimport './DateTuner.scss';\n\nclass DateTuner extends React.Component {\n  constructor(props){\n    super(props);\n\n    var today = new Date();\n    var lastWeek = new Date();\n    lastWeek.setDate(today.getDate() - 7);\n\n    this.state = {\n      minDate: lastWeek,\n      selectedDate: today,\n      maxDate: today\n    };\n  }\n\n  onSelectedDateChange = (item) => {\n    this.setState({ selectedDate: item },\n                  () => this.props.onSelectedDateChange(item));\n  }\n\n  render(){\n    return (\n      <div className=\"date-tuner\">\n        <DatePicker minDate={this.state.minDate} maxDate={this.state.maxDate}\n                    value={this.state.selectedDate}\n                    onChange={this.onSelectedDateChange} />\n      </div>\n    );\n  }\n}\n\nexport default DateTuner;\n","import React from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport './DropdownToggle.scss';\n\nimport languages from '../data/languages.json';\n\nclass LanguageTuner extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selectedLanguageCode: \"en\",\n      selectedLanguageName: \"English\"\n    };\n  }\n\n  onSelectedLanguageChange = (item) => {\n    var languageName = \"\";\n    for (var i in languages){\n      if (languages[i].code === item){\n        languageName = languages[i].name;\n      }\n    }\n\n    this.setState({ selectedLanguageCode: item, selectedLanguageName: languageName },\n                  () => this.props.onSelectedLanguageChange(item));\n  }\n\n  render(){\n    return (\n      <div className=\"hug-dropdown-toggle\">\n        <Dropdown onSelect={this.onSelectedLanguageChange}>\n          <Dropdown.Toggle variant=\"default\">\n            {this.state.selectedLanguageName}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item eventKey=\"en\">English</Dropdown.Item>\n            <Dropdown.Item eventKey=\"de\">Deutsch</Dropdown.Item>\n            <Dropdown.Item eventKey=\"es\">Español</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport default LanguageTuner;\n","import React from 'react';\n\nimport './VideoCountTuner.scss'\n\nclass VideoCountTuner extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selectedVideoCount: 10\n    };\n  }\n\n  onSelectedVideoCountChange = (item) => {\n    this.setState({ selectedVideoCount: item },\n                  () => this.props.onSelectedVideoCountChange(item));\n  }\n\n  render(){\n    return (\n      <div className=\"video-count-tuner\">\n        <label for=\"VideoCountRange\"># of Videos</label>\n        <input type=\"range\" min=\"1\" max=\"20\" step=\"1\"\n              id=\"VideoCountRange\"\n               value={this.state.selectedVideoCount}\n               onChange={changeEvent => this.onSelectedVideoCountChange(changeEvent.target.value)}\n               />\n      </div>\n    );\n  }\n}\n\nexport default VideoCountTuner;\n","import axios from 'axios';\n\nimport React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport ChannelTuner from './ChannelTuner';\nimport CountryTuner from './CountryTuner';\nimport DateTuner from './DateTuner';\nimport LanguageTuner from './LanguageTuner';\nimport VideoCountTuner from './VideoCountTuner';\n\nimport countries from '../data/countries.json';\n\nclass Control extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selectedChannel: \"gratitude\",\n      selectedVideoCount: 10,\n      selectedDate: new Date(),\n      selectedCountry: \"us\",\n      selectedLanguage: \"en\"\n    };\n\n    this.getPlaylist();\n    this.getStatistics();\n\n    this.onPlaylistChange = props.onPlaylistChange;\n    this.onStatisticsChange = props.onStatisticsChange;\n  }\n\n  getPlaylist(){\n    var component = this;\n\n    axios({\n      method: 'get',\n      url: 'https://hug-of-soul.herokuapp.com/videos',\n      responseType: 'json',\n      params: {\n        category: this.state.selectedChannel,\n        countryCode: this.state.selectedCountry,\n        languageCode: this.state.selectedLanguage,\n        publishedDate: this.state.selectedDate,\n        maxResults: this.state.selectedVideoCount\n      }\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n      component.onPlaylistChange(response.data.items);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  getStatistics(){\n    var component = this;\n\n    var countryCode = \"\";\n    for (var i in countries){\n      if (countries[i].code === component.state.selectedCountry){\n        countryCode = countries[i].stat;\n      }\n    }\n\n    axios({\n      method: 'get',\n      url: 'https://api.covid19api.com/summary',\n      responseType: 'json'\n    }).then(function (response) {\n      // handle success\n      for (var i in response.data.Countries){\n        if (response.data.Countries[i].CountryCode === countryCode){\n          component.onStatisticsChange(response.data.Countries[i].TotalRecovered);\n        }\n      }\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  onSelectedChannelChange = (item) => {\n    this.setState({ selectedChannel: item },\n                  () => this.getPlaylist());\n  }\n\n  onSelectedVideoCountChange = (item) => {\n    this.setState({ selectedVideoCount: item });\n  }\n\n  onSelectedDateChange = (item) => {\n    this.setState({ selectedDate: item });\n  }\n\n  onSelectedCountryChange = (item) => {\n    this.setState({ selectedCountry: item },\n                  () => {\n                    this.getPlaylist();\n                    this.getStatistics();\n                  });\n  }\n\n  onSelectedLanguageChange = (item) => {\n    this.setState({ selectedLanguage: item },\n                  () => this.getPlaylist());\n  }\n\n  render(){\n    return (\n      <div>\n        <ChannelTuner onSelectedChannelChange={this.onSelectedChannelChange} />\n        <Row className=\"mb-3\">\n          <Col xs={6}>\n            <VideoCountTuner onSelectedVideoCountChange={this.onSelectedVideoCountChange} />\n          </Col>\n          <Col xs={6}>\n            <DateTuner onSelectedDateChange={this.onSelectedDateChange} />\n          </Col>\n        </Row>\n        <Row className=\"mb-3\">\n          <Col xs={6}>\n            <CountryTuner onSelectedCountryChange={this.onSelectedCountryChange} />\n          </Col>\n          <Col xs={6}>\n            <LanguageTuner onSelectedLanguageChange={this.onSelectedLanguageChange} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Control;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\n\nimport './HowToHug.scss';\n\nclass HowToHug extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      show: false\n    };\n  }\n\n  setShow = (item) => {\n    this.setState({ show: item });\n  }\n\n  render(){\n    const handleClose = () => this.setShow(false);\n    const handleShow = () => this.setShow(true);\n\n    return (\n      <div className=\"hug-howto-section\">\n        <Row>\n          <Col xs={6} sm={4}>\n            <p className=\"lead\">\n              Wanna see your video here? Learn how to do it.\n            </p>\n          </Col>\n          <Col xs={6} sm={8}>\n            <Button variant=\"default\" onClick={handleShow}>HOW TO HUG</Button>\n          </Col>\n        </Row>\n\n        <Modal show={this.state.show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>How to Hug</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ol>\n              <li>\n                Upload your video to YouTube\n              </li>\n              <li>\n                Send us the link: <a href=\"mailto:hugofthesoul@gmail.com\">hugofthesoul@gmail.com</a>\n              </li>\n              <li>\n                If doctors like your video then it will appear soon\n              </li>\n            </ol>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default HowToHug;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowCircleRight,\n  faArrowCircleLeft\n} from '@fortawesome/free-solid-svg-icons'\n\nimport './Playlist.scss';\n\nclass Playlist extends React.Component {\n  constructor(props){\n    super(props);\n\n    var xs = window.innerWidth < 768;\n    this.state = {\n      size: xs ? 3 : 5,\n      small: xs,\n      start: 0\n    };\n  }\n\n  scrollLeft = () =>\n  {\n    if (this.state.start > 0){\n      this.setState({ start: this.state.start - 1 });\n    }\n  }\n\n  scrollRight = () =>\n  {\n    if (this.state.start < this.props.videos.length - this.state.size){\n      this.setState({ start: this.state.start + 1 });\n    }\n  }\n\n  render(){\n    var vids = []\n    for (var i = this.state.start; i < this.state.start + this.state.size; i++)\n    {\n      vids.push(i);\n    }\n\n    var playlist = [];\n    for (const vid in vids)\n    {\n      playlist.push(\n      <Col xs={3} sm={2}>\n        <Card>\n            {this.props.videos.length > vids[vid] &&\n              <img alt={this.props.videos[vids[vid]].snippet.title}\n                  src={this.props.videos[vids[vid]].snippet.thumbnails.default.url}\n                  width=\"100%\" height=\"100%\"\n                  onClick={() => this.props.onVideoChange(vids[vid])} />}\n        </Card>\n      </Col>);\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col xs={1} onClick={this.scrollLeft} className=\"hos-playlist-btn\">\n            <FontAwesomeIcon icon={faArrowCircleLeft} size={this.state.small ? \"1x\" : \"2x\"} fixedWidth />\n          </Col>\n          {playlist}\n          <Col xs={1} onClick={this.scrollRight} className=\"hos-playlist-btn\">\n            <FontAwesomeIcon icon={faArrowCircleRight} size={this.state.small ? \"1x\" : \"2x\"} fixedWidth />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Playlist;\n","import React from 'react';\n\nimport './Screen.scss';\n\nclass Screen extends React.Component {\n  render() {\n    console.log(this.props.embedUrl);\n\n    return (\n      <div className=\"screen-section\">\n        <iframe width=\"100%\"\n                height=\"625\"\n                frameBorder=\"0\"\n                title=\"Hope TV\"\n                src={this.props.embedUrl}\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen>\n        </iframe>\n      </div>\n    );\n  }\n}\n\nexport default Screen;\n","import React from 'react';\n\nimport \"./NewsMarquee.scss\";\n\nclass NewsMarquee extends React.Component {\n\n  render(){\n    // This can be zero if the API source is mid update\n    const newsText = `Flash News!!! ${this.props.totalRecovered} recovered from COVID-19`;\n\n    return (\n      <div className=\"marquee\">         \n        <div>\n          {this.props.totalRecovered > 0 &&\n            <span>{newsText}</span>\n          }\n          {this.props.totalRecovered > 0 &&\n            <span>{newsText}</span>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewsMarquee;\n","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport Control from './component/Control';\nimport HowToHug from './component/HowToHug';\nimport Playlist from './component/Playlist';\nimport Screen from './component/Screen';\nimport NewsMarquee from './component/NewsMarquee';\n\nimport './App.scss'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      videos: [],\n      selectedVideo: 0,\n      totalRecovered: 0\n    };\n  }\n\n  onPlaylistChange = (results) => {\n    this.setState({ videos: results });\n  }\n\n  onVideoChange = (results) => {\n    this.setState({ selectedVideo: results });\n  }\n\n  onStatisticsChange = (totalRecovered) => {\n    this.setState({ totalRecovered: totalRecovered });\n  }\n\n  render(){\n    return (\n      <Container className=\"App\">\n        <Row className=\"row justify-content-sm-center\">\n          <Col xs={12} md={8} className=\"mb-4\">\n            {this.state.videos.length > 0 &&\n              <Screen embedUrl={`https://www.youtube.com/embed/${this.state.videos[this.state.selectedVideo].snippet.resourceId.videoId}`} />}\n            <NewsMarquee totalRecovered={this.state.totalRecovered} />\n            <Playlist videos={this.state.videos} onVideoChange={this.onVideoChange}/>\n          </Col>\n          <Col xs={12} md={4} className=\"mb-4\">\n            <Control onPlaylistChange={this.onPlaylistChange}\n                     onStatisticsChange={this.onStatisticsChange} />\n            <HowToHug />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPeopleCarry,\n  faPray\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faWhatsapp\n} from '@fortawesome/free-brands-svg-icons'\n\nimport './Hugs.scss';\n\nclass Hugs extends React.Component {\n  render(){\n    return (\n      <Container className=\"hugs\">\n        <Row>\n          <Col xs={12} sm={8}>\n            <h1 className=\"title\">Supporters</h1>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col xs={12} sm={8}>\n            <h2 className=\"title\"><FontAwesomeIcon icon={faPray} fixedWidth /> Roger</h2>\n            <p className=\"text-orange\">\n              Happy for you to call me and I'll pray for you.\n            </p>\n            <Button><FontAwesomeIcon icon={faWhatsapp} fixedWidth /> Connect</Button>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={8}>\n            <h2 className=\"title\"><FontAwesomeIcon icon={faPeopleCarry} fixedWidth /> Rommy</h2>\n            <p className=\"text-orange\">\n              I'd love to hear about your day. Keep going!\n            </p>\n            <Button><FontAwesomeIcon icon={faWhatsapp} fixedWidth /> Connect</Button>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Hugs;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\n\nimport './Hospital.scss'\n\nclass Hospital extends React.Component {\n  render(){\n    return (\n      <Container className=\"hospital\">\n        <h1 className=\"title mb-4\">@Hospital</h1>\n        <Card>\n          <Card.Text>Let me know what you want me to put for you.</Card.Text>\n          <Card.Subtitle><i>- Jay</i></Card.Subtitle>\n        </Card>\n        <Card>\n          <Card.Text>May God sustain and strenghten you through this difficult hour.</Card.Text>\n          <Card.Subtitle><i>- Jermaine</i></Card.Subtitle>\n        </Card>\n        <Card>\n          <Card.Text>You are not alone. We are fighting with you.</Card.Text>\n          <Card.Subtitle><i>- Kersing</i></Card.Subtitle>\n        </Card>\n        <Card>\n          <Card.Text>Thank you for your hard work and saving so many lives!</Card.Text>\n          <Card.Subtitle><i>- Mattias</i></Card.Subtitle>\n        </Card>\n        <Card>\n          <Card.Text>We want to share hope because we have hope.</Card.Text>\n          <Card.Subtitle><i>- Peter</i></Card.Subtitle>\n        </Card>\n        <Card>\n          <Card.Text>\n            <p>You guys are the real fighter, we engineers, scientists are there for you to make your life better. We can't feel the trauma you undergo by patients & their family in normal days and now world is going thru phase of pandemic as COVID-19 you people are working day & night to cure the patient without thinking about your health.</p>\n            <p>We hope to reduce your depression thru various unconditional supports and see you guys smiling. Thank You Doctors & Medical Helpers.</p>\n          </Card.Text>\n          <Card.Subtitle><i>- Pratyoosh</i></Card.Subtitle>\n        </Card>\n        <Card>\n          <Card.Text>estimados doctores, enfermeras y trabajadores en salud, este es un pequeño agradecimiento por todo lo que ustedes hcen por nosotros dia a dia. Por favor, no se sientan solos, somos muchos los que estamos orando por ustedes, pedimos que Dios les de fuerzas para vencer esta batalla. Un abrazo del alma.</Card.Text>\n          <Card.Subtitle><i>- Rommy</i></Card.Subtitle>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default Hospital;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCross,\n  faSmile,\n  faUsers\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faGithub,\n  faTrello\n} from '@fortawesome/free-brands-svg-icons'\n\nimport './About.scss'\n\nclass About extends React.Component {\n\n  render(){\n    return (\n      <Container>\n        <Row>\n          <Col xs={12} sm={8}>\n            <h1 className=\"title\">About</h1>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col xs={12} sm={8}>\n            <h2><FontAwesomeIcon icon={faSmile} fixedWidth /> Purpose</h2>\n            <p class=\"text-orange\">\n              As the world battles COVID-19 many dashboards and visualizations have been created\n              to track the spread of the virus. We list some examples below:\n            </p>\n            <ul>\n              <li><a href=\"https://who.maps.arcgis.com/apps/opsdashboard/index.html#/c88e37cfc43b4ed3baf977d77e4a0667\">WHO: Coronavirus disease (COVID-19) Situation Dashboard</a></li>\n              <li><a href=\"https://coronavirus.jhu.edu/map.html\">Coronavirus COVID-19 Global Cases by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University</a></li>\n              <li><a href=\"https://nssac.bii.virginia.edu/covid-19/dashboard/\">University of Virginia Biocomplexity Institute COVID-19 Surveillance Dashboard</a></li>\n            </ul>\n            <p class=\"text-orange\">\n              Why is <em>everyone</em> so focused on what is going wrong?\n              We felt like something was missing and a change in perspective was necessary.\n              Why not  highlight the good things that are happening because of COVID-19.\n              This application is the result of that vision.\n              Thank you for visiting! We hope that you'll leave encouraged and\n              ready to keep fighting the good fight wherever you are.\n            </p>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col xs={12} sm={8}>\n            <h2><FontAwesomeIcon icon={faCross} fixedWidth /> Backstory</h2>\n            <p class=\"text-orange\">\n              Our founder was moved by the suicide of an Italian nurse and wondered how\n              we might prevent further suicides of medical care providers amidst the COVID-19 pandemic.\n              She proposed this project (<a href=\"https://devpost.com/software/abrazo-del-alma\">abrazo del alma</a>)\n              to address the <code>#MentalHealth</code> challenge at the <a href=\"https://www.covidhack.com/\">COVID-19 Global Church Hackathon</a>.\n            </p>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={8}>\n            <h2><FontAwesomeIcon icon={faUsers} fixedWidth /> Connect</h2>\n            <p class=\"text-orange\">\n              Excited about what we're building next? Want to help out? If so,\n              please subscribe to our <a href=\"https://groups.google.com/forum/#!forum/hugofthesoul\">mailing list </a>\n              to learn about what we're up to.\n            </p>\n            <p class=\"text-orange\">\n              <a href=\"https://github.com/hugofthesoul\" title=\"Github\">\n                <FontAwesomeIcon icon={faGithub} size=\"2x\" fixedWidth />\n              </a>\n              <a href=\"https://trello.com/b/FNG7Q3NJ/covid19-christian-hackathon-hug-of-soul\" title=\"Trello\">\n                <FontAwesomeIcon icon={faTrello} size=\"2x\" fixedWidth />\n              </a>\n            </p>\n          </Col>\n          <Col xs={0} sm={4}>\n            <h2>&nbsp;</h2>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n}\n\nexport default About;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Home from './App';\nimport App from './App';\nimport GetHug from './Hugs';\nimport Hospital from './Hospital';\nimport About from './About';\nimport Login from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport ImgLogo from './image/logo-transparent.png';\nimport './index.scss';\n\nReactDOM.render((\n  <React.StrictMode>\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"fixed-top navigation-bar\">\n      <Container>\n      <Navbar.Brand href=\"/#\"><img alt=\"Hug of the Soul\" src={ImgLogo} width=\"30\" height=\"30\" /></Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav>\n          <Nav.Link href=\"/#hug-tv\">Hug TV</Nav.Link>\n          <Nav.Link href=\"/#hugs\">Get Hugs</Nav.Link>\n          <Nav.Link href=\"/#hospital\">Hugs per Hospital</Nav.Link>\n          <Nav.Link href=\"/#about\">About</Nav.Link>\n        </Nav>\n        <div class=\"flex-fill\">&nbsp;</div>\n        <Nav>\n          <Nav.Link href=\"/#login\"><FontAwesomeIcon icon={faUser} /></Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      </Container>\n    </Navbar>\n    <br />\n    <Router basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/hug-tv\">\n          <App />\n        </Route>\n        <Route path=\"/hugs\">\n          <GetHug />\n        </Route>\n        <Route path=\"/hospital\">\n          <Hospital />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>\n  ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/bolivia_640.efbf684c.png\";"],"sourceRoot":""}